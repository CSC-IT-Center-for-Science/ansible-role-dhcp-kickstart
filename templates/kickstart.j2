install
text
reboot
skipx

# The hostvars[groups[item][0]]['install_repo'] pattern is used in this template
# Ansible has no way of accessing a group's variables, so they are accessed
# via the first host of the group.

# As per commit 9b0e011f, variables should be
# "set for the group, so for example group_vars/groupname/vars.yml
# it's not enough to specify them in group_vars/all.yml
# because of how we use hostvars[] to write the kickstart templates."

# This also means that role defaults will not end up in hostvars.
# You can't refer to hostvars[groups[item][0]]['variable'] and expect it to
# fallback to the value of 'variable' from role defaults/main.yml.
# Source: https://github.com/ansible/ansible/issues/6189

# A comprehensive variable lookup navigating this rather perplexing template
# would consist of the following:

# 1) First check if the variable is defined in the hostvars, and of desired value
{% if hostvars[groups[item][0]]['dhcp_kickstart_disable_ipv6'] is defined and hostvars[groups[item][0]]['dhcp_kickstart_disable_ipv6'] is sameas true %}
network --noipv6
# 2) Then check any other desired values for the same
{% elif hostvars[groups[item][0]]['dhcp_kickstart_disable_ipv6'] is defined and hostvars[groups[item][0]]['dhcp_kickstart_disable_ipv6'] is sameas false %}
network
# 3) If it wasn't defined in hostvars, we can still have a separate lookup into the role defaults for a particular value
{% elif dhcp_kickstart_disable_ipv6 is sameas true %}
network --noipv6
# 4) If role default turned out to be of undesired value as well, fall back to some kind of default action.
{% else %}
network
{% endif %}

{% if hostvars[groups[item][0]]['yum_proxy'] is defined %}
url --url {{ hostvars[groups[item][0]]['install_repo'] }} --proxy={{ hostvars[groups[item][0]]['yum_proxy'] }}
{% else %}
url --url {{ hostvars[groups[item][0]]['install_repo'] }}
{% endif %}

{% for repo in hostvars[groups[item][0]]['additional_repos'] %}
{% if hostvars[groups[item][0]]['yum_proxy'] is defined %}
repo --name={{ repo.name }} --baseurl={{ repo.url }} --proxy={{ hostvars[groups[item][0]]['yum_proxy'] }}
{% else %}
repo --name={{ repo.name }} --baseurl={{ repo.url }}
{% endif %}
{% endfor %}
lang {{ hostvars[groups[item][0]]['kickstart_lang'] | default('en_US.UTF-8') }}
keyboard {{ hostvars[groups[item][0]]['kickstart_keyboard'] | default('fi-latin1') }}
zerombr
{% if hostvars[groups[item][0]]['dhcp_kickstart_centos_version'] is defined and hostvars[groups[item][0]]['dhcp_kickstart_centos_version'] == '8' %}
bootloader --location=mbr --append="rhgb quiet crashkernel=auto"
{% else %}
# Default to CentOS 7
bootloader --location=mbr --append elevator=deadline
{% endif %}

timezone {{ hostvars[groups[item][0]]['kickstart_timezone'] | default('Europe/Helsinki') }}
auth --enableshadow --passalgo=sha512
rootpw --iscrypted {{ hostvars[groups[item][0]]['root_password_hash'] }}

{% if hostvars[groups[item][0]]['dhcp_kickstart_centos_version'] is defined and hostvars[groups[item][0]]['dhcp_kickstart_centos_version'] == '8' %}
selinux --permissive
firewall --enabled --ssh
{% else %}
# Default to CentOS 7
selinux --disabled
firewall --service=ssh
services --enabled=ntpd
{% endif %}

{% if hostvars[groups[item][0]]['kickstart_log_host'] is defined %}
logging --host={{ hostvars[groups[item][0]]['kickstart_log_host'] }}
{% endif %}

clearpart --all --drives={{ hostvars[groups[item][0]]['os_disks'] }} --initlabel
ignoredisk --only-use={{ hostvars[groups[item][0]]['os_disks'] }}

{% for line in hostvars[groups[item][0]]['kickstart_partitions'] %}
{{ line }}
{% endfor %}

%packages
# Always install these packages when defined in the group_vars.
{% if hostvars[groups[item][0]]['kickstart_packages'] is defined %}
{{ hostvars[groups[item][0]]['kickstart_packages'] }}
{% endif %}
# If CentOS8 is set in the group, we do a...
{% if hostvars[groups[item][0]]['dhcp_kickstart_centos_version'] is defined and hostvars[groups[item][0]]['dhcp_kickstart_centos_version'] == '8' %}
# ...no-op.
# For consideration: Might this be a good spot for @Core?
{% else %}
# Otherwise we default to CentOS7.
# If user doesn't manage packages we provide some defaults.
{% if hostvars[groups[item][0]]['dhcp_kickstart_manage_packages'] is not defined %}
@ Base
-NetworkManager
-NetworkManager-bluetooth
-NetworkManager-libnm
-NetworkManager-tui
-NetworkManager-adsl
-NetworkManager-wifi
-NetworkManager-glib
-NetworkManager-team
-NetworkManager-wwan
{% endif %}
# As an exception, this variable is not read from hostvars.
{% if dhcp_kickstart_install_chrony == false %}
-chrony
{% endif %}
{% endif %}
%end

{% if hostvars[groups[item][0]]['kickstart_pre_option'] is defined %}
{% if hostvars[groups[item][0]]['kickstart_extra_pre_commands'] is defined %}
####### Extra PRE commands
{{ hostvars[groups[item][0]]['kickstart_pre_option'] }}
{{ hostvars[groups[item][0]]['kickstart_extra_pre_commands'] }}
%end
{% endif %}
{% endif %}

%post --interpreter /bin/bash --log /root/ks-post.log.1
mkdir -p /root/.ssh
{% for key in hostvars[groups[item][0]]['root_keys'] %}
echo "{{ key }}" >> /root/.ssh/authorized_keys
{% endfor %}
chmod 700 /root/.ssh
chmod 600 /root/.ssh/authorized_keys
%end

%post --interpreter /bin/bash --log /root/ks-post.log.2

{% if hostvars[groups[item][0]]['dhcp_kickstart_centos_version'] is defined and hostvars[groups[item][0]]['dhcp_kickstart_centos_version'] == '8' %}
# No-op.
{% else %}
# Add mellanox ethernet modules to autoload on boot. This way, if a host has a
# mellanox card, it will come up in the ethernet mode.
echo mlx4_en >>/etc/modules-load.d/mlx4.conf
echo bonding >>/etc/modules-load.d/bonding.conf
modprobe mlx4_en
modprobe mlx4_ib
modprobe mlx4_core
modprobe bonding

#Disable NetworkManger service
systemctl stop NetworkManager
systemctl disable NetworkManager
{% endif %}

{% if hostvars[groups[item][0]]['dhcp_kickstart_disable_ipv6'] is defined and hostvars[groups[item][0]]['dhcp_kickstart_disable_ipv6'] is sameas true %}
# Disable Ipv6 at the kernel level
echo "net.ipv6.conf.all.disable_ipv6 = 1" >> /etc/sysctl.conf
echo "net.ipv6.conf.default.disable_ipv6 = 1" >> /etc/sysctl.conf
{% elif hostvars[groups[item][0]]['dhcp_kickstart_disable_ipv6'] is defined and hostvars[groups[item][0]]['dhcp_kickstart_disable_ipv6'] is sameas false %}
# No-op.
{% elif dhcp_kickstart_disable_ipv6 is sameas true %}
echo "net.ipv6.conf.all.disable_ipv6 = 1" >> /etc/sysctl.conf
echo "net.ipv6.conf.default.disable_ipv6 = 1" >> /etc/sysctl.conf
{% endif %}

{% if hostvars[groups[item][0]]['kickstart_extra_post_commands'] is defined %}
####### Extra POST commands
{{ hostvars[groups[item][0]]['kickstart_extra_post_commands'] }}
{% endif %}

{% if hostvars[groups[item][0]]['kickstart_grubby_remove_args'] is defined and hostvars[groups[item][0]]['kickstart_grubby_args'] is defined%}
/sbin/grubby --update-kernel=`/sbin/grubby --default-kernel` --args="{{ hostvars[groups[item][0]]['kickstart_grubby_args'] }}" --remove-args="{{ hostvars[groups[item][0]]['kickstart_grubby_remove_args'] }}"
{% elif hostvars[groups[item][0]]['kickstart_grubby_remove_args'] is not defined and hostvars[groups[item][0]]['kickstart_grubby_args'] is defined%}
/sbin/grubby --update-kernel=`/sbin/grubby --default-kernel` --args="{{ hostvars[groups[item][0]]['kickstart_grubby_args'] }}"
{% else %}
/sbin/grubby --update-kernel=`/sbin/grubby --default-kernel` --args="{{ kickstart_grubby_args }}"
{% endif %}
# End post install kernel options update
%end
